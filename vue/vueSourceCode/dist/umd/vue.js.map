{"version":3,"file":"vue.js","sources":["../../src/util/index.js","../../src/observe/array.js","../../src/observe/dep.js","../../src/observe/index.js","../../src/state.js","../../src/compiler/parser-html.js","../../src/compiler/generate.js","../../src/compiler/index.js","../../src/util/next-tick.js","../../src/observe/schedular.js","../../src/observe/watcher.js","../../src/vdom/patch.js","../../src/lifecycle.js","../../src/init.js","../../src/vdom/create-element.js","../../src/render.js","../../src/initGlobalAPI/mixin.js","../../src/initGlobalAPI/const.js","../../src/initGlobalAPI/assets.js","../../src/initGlobalAPI/index.js","../../src/index.js"],"sourcesContent":["// 工具库\r\n/**\r\n * \r\n * @param {*} data  当前数据是不是对象\r\n */\r\n\r\nexport function isObject(data) {\r\n    return typeof data === 'object' && data !== null\r\n}\r\n/**\r\n * 给对象增加属性\r\n * @param {*} data \r\n * @param {*} key \r\n * @param {*} value \r\n */\r\nexport function def(data, key, value) {\r\n    Object.defineProperty(data, key, {\r\n        enumerable: false,\r\n        configurable: false,\r\n        value: value\r\n    })\r\n}\r\n/**\r\n * 取值时实现代理效果\r\n *  // 为了让用户更好的使用，我希望可以直接vm.xx。vm直接取值\r\n * @param {*} vm \r\n * @param {*} source \r\n * @param {*} key \r\n */\r\nexport function proxy(vm, source, key) {\r\n    Object.defineProperty(vm, key, {\r\n        get() {\r\n            return vm[source][key]\r\n        },\r\n        set(newValue) {\r\n            vm[source][key] = newValue\r\n        }\r\n    })\r\n}\r\n// 生命周期的钩子\r\nconst LIFECYCLE_HOOKS = [\r\n    'beforeCreate',\r\n    'created',\r\n    'beforeMount',\r\n    'mounted',\r\n    'beforeUpdate',\r\n    'updated',\r\n    'beforeDestroy',\r\n    'destroyed'\r\n];\r\nlet strats = {}\r\nfunction mergeHook(parentVal, childVal) {\r\n    if (childVal) {\r\n        if (parentVal) {\r\n            return parentVal.concat(childVal);\r\n        } else {\r\n            return [childVal]\r\n        }\r\n    } else {\r\n        return parentVal\r\n    }\r\n}\r\nLIFECYCLE_HOOKS.forEach(hook => {\r\n    strats[hook] = mergeHook\r\n})\r\n/**\r\n * 实现俩个对象的合并\r\n * @param {*} parent \r\n * @param {*} child \r\n */\r\nexport function mergeOptions(parent, child) {\r\n    const options = {};\r\n    for (let key in parent) {\r\n        mergeField(key)\r\n    }\r\n    for (let key in child) {//如果已经合并过了就不需要再次合并了\r\n        if (!parent.hasOwnProperty(key)) {\r\n            mergeField(key);\r\n        }\r\n\r\n    }\r\n    // 默认的合并策略  但是有些属性 需要有特殊的合并方式  生命周期的合并\r\n    function mergeField(key) {\r\n        if (strats[key]) {\r\n            return options[key] = strats[key](parent[key], child[key])\r\n        }\r\n        if (typeof parent[key] === 'object' && typeof child[key] === 'object') {\r\n            options[key] = {\r\n                ...parent[key],\r\n                ...child[key]\r\n            }\r\n        } else if (child[key] == null) {\r\n            options[key] = parent[key];\r\n        } else {\r\n            options[key] = child[key];\r\n        }\r\n    }\r\n    return options\r\n}\r\n\r\n","// 这里为什么要重写数组的方法呢，是因为用户是在前台把数组更新了，但是我们怎么获取更新的数组呢，只能在监听到用户传的方法也就是前面的value.__protp__=arrayMethods获取到所有的方法，然后这边在根据方法和传入的值在进行数组更新，然后在返回新的数组\r\n\r\n\r\n\r\n//  我要重写数组的哪些方法  ：7个  push shift  unshift  pop  reverse sort splice 会导致数组本身发生变化\r\n// slice（）这个方法并不会改变数组，就不用去通知了也不需要劫持，我们只监听数组变了的方法\r\n\r\n\r\n// 这就是原型链查找问题，会向上查找，先查找我重写的，重写的没有会继续向上查找\r\nlet oldArrayMethods = Array.prototype;//设置这个变量是为了如果用户调用了我们没有重写的方法（比如slice），会直接调用Array基类的方法\r\n// value.__propo__ = arrayMethods(数组通过原型链指向了arrayMethods)\r\n//arrayMethods.__propo__ = oldArrayMethods(arrayMethods通过原型链指向了oldArrayMethods)\r\nexport const arrayMethods = Object.create(oldArrayMethods); // Object.create()方法创建一个新对象，使用现有的对象来提供新创建的对象的__proto__。 也就是这端代码 等于 arrayMethods.__propo__ = oldArrayMethods\r\n\r\n\r\nconst methods = [\r\n    'push',\r\n    'shift',\r\n    'unshift',\r\n    'pop',\r\n    'sort',\r\n    'splice',\r\n    'reverse'\r\n]\r\n\r\nmethods.forEach(method=>{\r\n    // 在arrayMethods这个属性上增加上面那些方法，调这些方法的时候会传入很多参数\r\n    arrayMethods[method] = function(...args){//...agrs是{name: \"zf\", age: 3}\r\n       // console.log('用户调用了方法');// AOP 切片编程  \r\n        const result = oldArrayMethods[method].apply(this,args);//调用原生的数组方法,这里的this指的是value,因为是value调用的,这个result返回的是value的length\r\n\r\n\r\n       // 判断：如果添加的元素可能还是一个对象\r\n\r\n        let inserted;//当前用户插入的元素\r\n        let ob =this.__ob__;//这里的this是指value，因为value在外面定义了value.__ob__=this;，这指向Observer的实例，而这个实例又有observerArray方法，所以可以调用observerArray方法\r\n        switch(method){\r\n            case 'push':\r\n            case 'usnshift':\r\n                inserted = args;\r\n                break;\r\n            case 'splice':  //3个  新增的属性  splice 有删除 新增 的功能 arr.splice(0,1，{name:1})\r\n                inserted = args.slice(2);     //获取到最后新增的数据截取出来\r\n            default:\r\n                break;            \r\n        }\r\n        if(inserted) ob.observerArray(inserted);//将新增对象属性继续观测\r\n        ob.dep.notify();//如果用户调用了push方法  我会通知当前这个dep去更新\r\n        return result;//这是是为了上面arrayMethods[method]=result,这个result就是为了改变this指向，让外面调用原生的方法\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","let id = 0;//每个dep也要有每个标识\r\nclass Dep {\r\n    constructor() {\r\n        this.id = id++;\r\n        this.subs = []\r\n    }\r\n    addSub(watcher){\r\n        this.subs.push(watcher);\r\n    }\r\n    depend() {\r\n        // 让wacher记住我当前的dep\r\n        Dep.target.addDep(this);\r\n    }\r\n    notify() {\r\n        this.subs.forEach(watcher => watcher.update())\r\n    }\r\n\r\n\r\n}\r\n\r\nlet stack = [];\r\n// 目前可以做到 将watcher保留起来  和  移除的功能\r\nexport function pushTarget(watcher) {\r\n    Dep.target = watcher;\r\n    stack.push(watcher)\r\n\r\n}\r\nexport function popTarget() {\r\n    stack.pop();\r\n    Dep.target = stack[stack.length - 1]\r\n\r\n}\r\n\r\nexport default Dep\r\n\r\n\r\n\r\n\r\n","// 把data中的数据 都使用Object.defineProperty重新定义  这是一个es5的方法\r\n// Object.defineProperty不能兼容ie8及以下，vue2无法兼容ie8版本\r\nimport {isObject,def} from '../util/index'\r\nimport {arrayMethods} from './array.js'\r\nimport Dep from './dep.js'\r\n/**\r\n *   步骤一：先创建一个Observer类进行数据监听，如果传入进来的data是个  对象  的话，遍历对象，用Object.defineProperty中的get和set方法进行数据变化的监听，如果对象里面嵌套对象，那么就用递归的方式进行深度监听\r\n *   步骤二：如果传入进来的data是个  数组   的话，那么它会对索引进行监听并附有get和set方法,如果有一百万个数组那么会监听一百万次，很浪费性能，所以为了不给数组的索引进行get，set监听，遍历数组获得每个对象，在给里面的每个对象进行监听\r\n *    步骤三：当data是个数组的话，如果用户对这个数组进行了方法调用改变数组（比如用了push，unshift等方法）我们也要对方法进行重写，进行监听，并重新赋值。\r\n * （这一步的大概逻辑是：会导致数组本身发生变化的方法写成一个数组，然后遍历在调用原生方法，将原生方法进行输出，具体看array.js）\r\n * （这里好像还要有模板解析）    \r\n * 步骤四：依赖收集\r\n * \r\n * \r\n * \r\n * \r\n * \r\n */\r\n\r\n\r\n\r\n/* 步骤一 start*/ \r\n\r\n//创建一个Observer的类\r\nclass Observer{\r\n   constructor(value){//这里的constructor是es6的新写法，一个类必须有 constructor 方法，一般 constructor 方法返回实例对象 this ，但是也可以指定  constructor 方法返回一个全新的对象，让返回的实例对象不是该类的实例。\r\n    //这是constructor的概念https://www.jianshu.com/p/fc79756b1dc0\r\n/* 步骤四. start*/ \r\n    this.dep = new Dep;//给数组用的\r\n/* 步骤四. end*/ \r\n/* 步骤三.2 start*/ \r\n//value.__ob__=this;//我给每一个监控过的对象都增加一个__ob__属性，这的this指的是Observer的实例,为了给后面的方法调用observerArray，进行数据监听\r\n// 上面的方法不能直接在vulue上加属性，因为下面的observe会进行数据监听，它会以为value增加新的数据，而上面的方法只是为了以后数据调用代码而进行赋值的，所以只能用下面的方法\r\n     def(value,'__ob__',this)\r\n/* 步骤三 end*/\r\n\r\n/* 步骤二 start*/ \r\n\r\n    // 如果是传进来的是数组，那么它会对索引进行监听并附有get和set方法,如果有一百万个数组那么会监听一百万次，很浪费性能\r\n    if(Array.isArray(value)){\r\n        //如果是数组的话并不会对索引进行观测，因为会导致性能问题\r\n        // 前端开发中很少很少  去操作索引  push  shift  unshift\r\n\r\n/* 步骤三.1 start*/ \r\n       value.__proto__= arrayMethods;\r\n/* 步骤三 end*/ \r\n\r\n\r\n        // 如果数组里放的是对象我在监控\r\n        this.observerArray(value);//这里虽然递归了，但是没有依赖收集\r\n    }else{\r\n        //vue如果数据的层次过多，需要递归的去解析对象中的属性，依次增加set和get方法\r\n        this.walk(value)// 先考虑一步的数据\r\n    }\r\n\r\n   }\r\n\r\n/* 步骤二 end*/ \r\n\r\n/* 步骤二 start*/   \r\n//这个方法是为了不给数组的索引进行get，set监听，直接遍历数组获得每个对象，在给对象进行监听\r\n   observerArray(value){//value是[{}],用observe监控了数组的每一项\r\n        for(let i=0; i<value.length;i++){\r\n            observe(value[i])\r\n        }\r\n   }\r\n/* 步骤二 end*/ \r\n\r\n/* 步骤一 start*/ \r\n   walk(data){\r\n       let keys = Object.keys(data); //[name,age,address]\r\n\r\n    //    for(let i=0;i<keys.length;i++){\r\n    //         let key =keys[i];\r\n    //         let value =data[key];\r\n    //         defineReactive(data,key,value);//定义响应式数据\r\n    //     }\r\n    // 可以简化为下面的代码\r\n        keys.forEach((key)=>{\r\n            defineReactive(data,key,data[key]);//定义响应式数据\r\n        })\r\n\r\n      \r\n   }\r\n/* 步骤一 end*/ \r\n}\r\n/* 步骤一 start*/  \r\nfunction defineReactive(data,key,value){\r\n    let dep = new Dep();\r\n    /* 步骤四 start*/ \r\n    //  observe(value);//这里的调用，是为了递归，获取到对象中的对象的属性:递归实现深度检测，但是如果层级太多使用递归会很浪费性能\r\n    // 上面是之前写的，在写依赖收集的时候改为下面写法\r\n    let childOb = observe(value);//这里这个value可能是数组，也可能是对象，返回的结果是observer的实例，当前这个value对应的observer\r\n     /* 步骤四 end*/ \r\n    Object.defineProperty(data,key,{\r\n        get(){//获取值的时候作一些操作\r\n           console.log('取值')//每个属性都对应着自己的watcher\r\n           if(Dep.target){//如果当前有watcher\r\n            dep.depend();//意味着我要将watcher存起来\r\n            /* 步骤四 start*/ \r\n             if(childOb){//数组的依赖收集\r\n                childOb.dep.depend();//收集了数组的相关依赖\r\n\r\n                // 如果数组中还有数组\r\n                if(Array.isArray(value)){\r\n                    dependArray(value);\r\n\r\n                }\r\n             }\r\n             /* 步骤四 end*/ \r\n\r\n           }\r\n           return value;\r\n        },\r\n        set(newValue){//当数据发生变化，也可以设置一些操作\r\n\r\n            console.log('更新数据')\r\n\r\n\r\n           if(newValue === value)  return;\r\n           observe(newValue);//继续劫持用户设置的值，因为有可能用户设置的值是一个对象；这里深度劫持就会在这个对象里有set和get方法，就能再次进行更改监听\r\n           value = newValue\r\n\r\n           dep.notify();//通知依赖的watcher来进行一个更新操作\r\n        }\r\n    })\r\n}\r\n/* 步骤一 end*/ \r\n\r\n\r\n/* 步骤四 start*/ \r\nfunction dependArray(value){\r\n  for(let i=0;i<value.length;i++){\r\n      let current =value[i];//将数组中的每一个都取出来，数据变化后  也去更新视图\r\n    //   数组中的数组的依赖收集\r\n      current.__ob__ && current.__ob__.dep.depend();\r\n      if(Array.isArray(current)){\r\n          dependArray(current)\r\n      }\r\n  }\r\n}\r\n/* 步骤四 end*/ \r\n\r\n\r\n/* 步骤一 start*/  \r\n\r\n// 这里是输出Observer观察到的数据\r\nexport function observe(data){\r\n    let isObj = isObject(data);\r\n    if(!isObj){\r\n        return;\r\n    }   \r\n   return new Observer(data)  // 用来观测数据\r\n \r\n}\r\n/* 步骤一 end*/\r\n\r\n\r\n","import { observe } from './observe/index.js'\r\nimport {proxy} from './util/index.js'\r\nexport function initState(vm) {\r\n    const opts = vm.$options;\r\n    //监测的顺序 vue的数据来源  属性  方法  数据  计算属性  watch\r\n    if (opts.props) {\r\n        initProps(vm);\r\n    }\r\n    if (opts.methods) {\r\n        initMethod(vm)\r\n    }\r\n    if (opts.data) {\r\n        initData(vm)\r\n    }\r\n    if (opts.computed) {\r\n        initComputed(vm)\r\n    }\r\n    if (opts.watch) {\r\n        initWatch(vm)\r\n    }\r\n}\r\nfunction initProps() { }\r\nfunction initMethod() { }\r\nfunction initData(vm) {\r\n    //   数据初始化工作\r\n    let data = vm.$options.data;//用户传递的data\r\n    data = vm._data = typeof data === 'function' ? data.call(vm) : data;\r\n    // console.log(data);\r\n    // 对象劫持  用户改变了数据  我希望可以得到通知  后可以  刷新页面\r\n    // MVVM模式 数据变化可以驱动视图变化\r\n\r\n    //  Object.defineroperty() 给属性增加get方法和set方法\r\n\r\n\r\n    // 为了让用户更好的使用，我希望可以直接vm.xx。vm直接取值\r\n    for (let key in data) {\r\n        proxy(vm, '_data', key)\r\n    }\r\n    observe(data);//1.响应式原理\r\n\r\n}\r\nfunction initComputed() { }\r\nfunction initWatch() { }","\r\n\r\n// vue源码\r\n// ?:匹配不补货\r\n\r\nconst ncname = '[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*'//命名空间：表示能匹配到abc-aaa这样的一个字符串\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`//命名空间标签：<aaa:asdee>\r\n// 匹配开始标签开始部分\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`)//标签开头的正则，捕获的内容是标签名\r\n\r\n\r\n/**\r\n * 这是验证上面的正则是否正确\r\n * let r = '<a:b>'.match(startTagOpen);\r\n * console.log(r)\r\n * \r\n * 获得这样的东西  [\"<a:b\", \"a:b\", index: 0, input: \"<a:b>\", groups: undefined]\r\n * \r\n * arguments[0] = 匹配到的标签  arguments[1] = 匹配到的标签名字 \r\n */\r\n\r\n\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`)// 匹配标签结尾的闭比如</div>\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/ // 匹配属性\r\nconst startTagClose = /^\\s*(\\/?)>/   // 匹配标签结束的 >\r\n\r\n\r\nexport function parseHTML(html) {\r\n\r\n    let root = null;//ast语法树的树根\r\n    let currentParent;//标识当前父亲是谁\r\n    let stack = [];\r\n    const ELEMENT_TYPE = 1;\r\n    const TEXT_TYPE = 3;\r\n\r\n    function createASTElement(tagName, attrs) {\r\n        return {\r\n            tag: tagName,\r\n            type: ELEMENT_TYPE,\r\n            children: [],\r\n            attrs,\r\n            parent: null\r\n        }\r\n    }\r\n\r\n    function start(tagName, attrs) {\r\n        //console.log('开始标签：', tagName, '属性是：', attrs);\r\n        //遇到开始标签 就创建一个ast元素\r\n        let element = createASTElement(tagName, attrs);\r\n        if (!root) {\r\n            root = element;\r\n        }\r\n        currentParent = element;//把当前元素标记成父ast树\r\n        stack.push(element);//将开始标签存放在栈中\r\n\r\n    }\r\n    function chars(text) {\r\n        // console.log('文本是：', text)\r\n        text = text.replace(/\\s/g, '');\r\n        if (text) {\r\n            currentParent.children.push({\r\n                text,\r\n                type: TEXT_TYPE\r\n            })\r\n        }\r\n    }\r\n    function end(tagName) {\r\n        // console.log('结束标签', tagName)\r\n        let element = stack.pop();//拿到的是ast对象\r\n        //我要标识当前这个p是属于这个div的儿子的\r\n        currentParent = stack[stack.length - 1];\r\n        if (currentParent) {\r\n            element.parent = currentParent;\r\n            currentParent.children.push(element);//实现了一个树的父子关系\r\n        }\r\n    }\r\n    // 不停的解析html\r\n    while (html) {\r\n        let textEnd = html.indexOf('<');\r\n        if (textEnd == 0) {\r\n            //   如果当前索引为0  肯定是一个标签  开始标签  结束标签\r\n            let startTagMatch = parseSartTag();//通过这个方法获取到匹配的结果 tagName，attrs\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs)//1.解析开始标签\r\n                continue;//如果开始标签匹配完毕后，继续下一次 匹配\r\n            }\r\n            let endTagMatch = html.match(endTag);\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length);\r\n                end(endTagMatch);//2.解析结束标签\r\n                continue;\r\n            }\r\n        }\r\n        let text;\r\n        if (textEnd >= 0) {\r\n            text = html.substring(0, textEnd)\r\n        }\r\n        if (text) {\r\n            advance(text.length);\r\n            chars(text)//3.解析文本\r\n        }\r\n    }\r\n    function advance(n) {\r\n        html = html.substring(n);\r\n    }\r\n    function parseSartTag() {\r\n        let start = html.match(startTagOpen)\r\n        if (start) {\r\n            const match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            advance(start[0].length);//将标签删除\r\n\r\n            let end, attr;\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // 将属性进行解析\r\n                advance(attr[0].length);//将属性去掉\r\n                match.attrs.push({\r\n                    name: attr[1],\r\n                    value: attr[3] || attr[4] || attr[5]\r\n                });//放在了attrs这个属性中\r\n\r\n            }\r\n            if (end) {//去掉开始标签的 >\r\n                advance(end[0].length);\r\n                return match\r\n            }\r\n        }\r\n    }\r\n    return root;\r\n}","const defaultTagRE = /\\{\\{((?:.|\\n)+?)\\}\\}/g // 匹配默认的分隔符 \"{{}}\"\r\n\r\nfunction genProps(attrs) {//处理属性，拼接成属性的字符串\r\n    let str = '';\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i];\r\n        if (attr.name === 'style') {\r\n            //style=\"color:red;font-size:14px\" => {style:{color:'red'},id:name}\r\n            let obj = {};\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, value] = item.split(':');\r\n                obj[key] = value\r\n            });\r\n            attr.value = obj;\r\n        }\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\nfunction genChildren(el) {\r\n    let children = el.children;\r\n    if (children && children.length > 0) {\r\n        return `${children.map(c => gen(c)).join(',')}`\r\n    } else {\r\n        return false\r\n    }\r\n}\r\nfunction gen(node) {\r\n    if (node.type == 1) {\r\n        //元素标签\r\n        return generate(node)\r\n    } else {\r\n        let text = node.text;// a {{name}}  b{{age}}  c\r\n        // _v(\"a\"+_s(name)+\"b\"+_s(age)+'c')\r\n        let tokens = [];\r\n        let match, index;\r\n        let lastIndex = defaultTagRE.lastIndex = 0;   // 正则的问题 lastIndex设为0才可以用exec正常匹配（具体为什么自己百度） 只要全局匹配，就需要将lastIndex每次匹配的时候就调到0处\r\n        while (match = defaultTagRE.exec(text)) {\r\n            index = match.index;\r\n            if (index > lastIndex) {\r\n                tokens.push(JSON.stringify(text.slice(lastIndex, index)));\r\n            }\r\n            tokens.push(`_s(${match[1].trim()})`)\r\n            lastIndex = index + match[0].length;\r\n        }\r\n        if (lastIndex < text.length) {\r\n            tokens.push(JSON.stringify(text.slice(lastIndex)))\r\n        }\r\n\r\n\r\n        return `_v(${tokens.join('+')})`;\r\n    }\r\n}\r\n\r\nexport function generate(el) {//[{name:'id',value:'app'},{}]  => {id:app,a:1,b:2}\r\n    let children = genChildren(el);\r\n    let code = `_c(\"${el.tag}\",${\r\n        el.attrs.length ? genProps(el.attrs) : 'undefined'\r\n        }${children ? `,${children}` : ''\r\n        }) `\r\n    return code;\r\n}","//将html变成函数的话，会用到ast语法树\r\n/*ast语法树  和 虚拟到dom有什么区别\r\nast语法树 是 用对象来编译html语法的（下面的原理）\r\n虚拟dom 是  用对象来描述dom节点的（也就是那个html下面有div标签，div下面有p，span标签等的dom节点）\r\n\r\n\r\n\r\nrender函数返回的是虚拟dom，现在做的是把template变成render函数\r\n\r\n\r\n把html不停的循环，拿出来之后组成一个树，这个树描述了一个dom结构\r\n*/\r\n\r\nimport { parseHTML } from './parser-html'\r\nimport {generate} from './generate';\r\n\r\n\r\nexport function compileToFunction(template) {\r\n    //console.log(template, '---');\r\n    //1）解析html字符串，将html字符串 => ast语法树\r\n    let root = parseHTML(template)\r\n    // console.log(root)\r\n\r\n\r\n    let code = generate(root);\r\n\r\n    //2)需要将ast语法树生成最终的render函数  就是字符串拼接 （模板引擎）\r\n    // 核心思路就是将模板转换成 下面这段字符串\r\n    // <div id=\"app\">hello<p>{{name}}</p><span>{{age}}</span></div>\r\n    // 将ast树，再次转换成js的语法树（重点：这个是js语法 执行后返回的是虚拟dom）\r\n    // _c('div',{id:'app'},_c('p',undefined,_v(_s(name))),_c('span',undefined,_v(_s(age))))\r\n\r\n    // 所有的模板引擎实现，都需要new Function + with\r\n    //这里加的with方法是为了实现ƒ anonymous(\r\n    // ) {\r\n    //     with(this){return _c(\"div\",{id:\"app\",style:{\"color\":\" red\"}},_v(\"hello\"),_c(\"p\",undefined,_v(_s(name))),_c(\"span\",undefined,_v(_s(age)))\r\n\r\n    //         )\r\n\r\n    //         } \r\n    //     }\r\n    // 这个函数，也就是render这个函数的，因为这个才是将模板进行编译的\r\n    let renderFn = new Function(`with(this){return ${code}} `)\r\n    // console.log(renderFn);(renderFn返回的是一个render函数，这个函数调用后就会形成虚拟dom)\r\n\r\n    //vue的render  它返回的是虚拟dom()\r\n    return renderFn\r\n}\r\n\r\n/**\r\n * 通过上面的正则，可以把下面的html编译成\r\n * start div:  attr:[{name:'id',value:'app'}]\r\n * start p\r\n * text hello\r\n * end p\r\n * end div\r\n */\r\n/*\r\n<div id=\"app\">\r\n    <p>hello</p>\r\n</div>\r\n//上面的html就会变成下面的抽象的语法，这就是ast语法树\r\n这个root就是ast语法树\r\nlet root ={\r\n    tag:'div',\r\n    attrs:[//属性\r\n        {name:'id',value:'app'}\r\n    ],\r\n    parent:null,\r\n    type:1,//它是什么类型，元素类型为1\r\n    children:[{\r\n        tag:'p',\r\n        attrs:[],\r\n        parent:root,\r\n        children:[{\r\n            text:'hello',\r\n            type:3,//文本类型为1\r\n            }]\r\n    }]\r\n}\r\n*/\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","let callbacks = []\r\n\r\nlet waiting = false;\r\nfunction flushCallback() {\r\n    callbacks.forEach(cb => cb());\r\n    waiting = false;\r\n}\r\nexport function nextTick(cb) {\r\n    // 多次调用nextTick 如果没有刷新的时候  就先把他放到数组中，\r\n    // 刷新后  更改waiting\r\n    callbacks.push(cb);\r\n    if (waiting === false) {\r\n        setTimeout(flushCallback, 0);\r\n        waiting = true;\r\n    }\r\n\r\n\r\n}\r\n\r\n","// 专门做调度的一个js\r\n\r\nlet queue = [];\r\nlet has = {};\r\nimport {nextTick} from '../util/next-tick';\r\nfunction flusSchedularQueue(){\r\n    queue.forEach(watcher => watcher.run())\r\n    queue = [];//让下一次可以继续使用\r\n    has = {};\r\n}\r\nexport function queueWatcher(watcher) {\r\n    const id = watcher.id;\r\n    if (has[id] == null) {\r\n        queue.push(watcher);\r\n        has[id] = true;\r\n\r\n        // 宏任务和微任务（vue里面使用了Vue.nextTick）\r\n        // Vue.nextTick = promise /mutatuinObserver/setImmediate/setTimeout//优雅降级\r\n\r\n\r\n        nextTick(flusSchedularQueue)\r\n    }\r\n}","import { pushTarget, popTarget } from './dep.js'\r\nimport { queueWatcher} from './schedular'\r\nlet id = 0;//每个watcher都有一个标识\r\n\r\nclass Watcher {\r\n    constructor(vm, exprOrFn, callback, options) {\r\n        this.vm = vm;\r\n        this.callback = callback;\r\n        this.options = options;\r\n\r\n        this.id = id++;\r\n        this.getter = exprOrFn;//将内部传过来的回调函数  放到getter属性上\r\n        this.depsId = new Set();//es6中的集合（不能放重复项）\r\n        this.deps = [];\r\n\r\n        this.get();//调用get方法，会让渲染watcher执行\r\n    }\r\n    addDep(dep) {//watcher 里不能放重复的dep dep里不能放重复的watcher\r\n        let id = dep.id;\r\n        if (!this.depsId.has(id)) {\r\n            this.depsId.add(id);\r\n            this.deps.push(dep);\r\n            dep.addSub(this);\r\n        }\r\n    }\r\n    get() {\r\n        pushTarget(this);//把watcher存起来 在Dep.target\r\n        this.getter();  //渲染watcher的执行\r\n        popTarget();//移除watcher\r\n    }\r\n    update() {\r\n        // 等待着   一起来更新  因为每次调用update的时候  都放入了watcher\r\n        //   这个方法是为了解决用户多次调同一个，比如push方法\r\n        queueWatcher(this)\r\n        // console.log(this.id);\r\n\r\n\r\n        // this.get();\r\n    }\r\n    run() {\r\n        console.log(55)\r\n        this.get();\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\nexport default Watcher\r\n","export function patch(oldVnode, vnode) {\r\n    // console.log(oldVnode , vnode);\r\n    // 递归创建真实节点  替换掉老的节点\r\n\r\n\r\n    // 1.判断是更新还是渲染\r\n    const isRealElement = oldVnode.nodeType;\r\n    if (isRealElement) {\r\n        const oldElm = oldVnode;//拿到div id=\"app\"\r\n        const parentElm = oldElm.parentNode;//body\r\n        let el = createElm(vnode)\r\n        parentElm.insertBefore(el, oldElm.nextSibling)\r\n\r\n        parentElm.removeChild(oldElm)\r\n\r\n        // 需要将渲染好的结构返回\r\n        return el;\r\n    }\r\n\r\n    function createElm(vnode) {//根据虚拟节点创建真实的节点\r\n        let { tag, children, key, data, text } = vnode;\r\n        //    是标签就创建标签\r\n        if (typeof tag === 'string') {\r\n            vnode.el = document.createElement(tag);\r\n            updateProperties(vnode);\r\n            children.forEach(child => {//递归创建儿子节点，将儿子节点扔到父节点中\r\n                return vnode.el.appendChild(createElm(child))\r\n            })\r\n        } else {\r\n            // 虚拟dom上映射这真实dom  方便后续更新操作\r\n            vnode.el = document.createTextNode(text)\r\n        }\r\n        // 如果不是标签就是文本\r\n        return vnode.el;\r\n    }\r\n// 更新属性\r\n    function updateProperties(vnode){\r\n        let newProps=vnode.data;\r\n        let el=vnode.el;\r\n        for(let key in newProps){\r\n            if(key ==='style'){\r\n                for(let styleName in newProps.style){\r\n                    el.style[styleName] = newProps.style[styleName]\r\n                }\r\n            }else if(key === 'class'){\r\n                el.className= newProps.class;\r\n            }else{\r\n                el.setAttribute(key,newProps[key]);\r\n            }\r\n        }\r\n        \r\n    }\r\n    \r\n}","import Watcher from './observe/watcher'\r\nimport {patch} from './vdom/patch'\r\nexport function lifecycleMixin(Vue) {\r\n    Vue.prototype._update = function (vnode) {\r\n        const vm =this;\r\n        // 我要通过虚拟节点  渲染出真实的dom\r\n        vm.$el = patch(vm.$el,vnode);//需要用虚拟节点创建出真实节点  替换掉  真实的$el\r\n        // console.log(vnode)\r\n    }\r\n}\r\n\r\nexport function mountComponent(vm, el) {\r\n    const options = vm.$options;//render\r\n    vm.$el = el;//代表真实的dom元素\r\n    // console.log(options,vm.$el);\r\n\r\n\r\n    // console.log(options,vm.$el)\r\n\r\n    // Watcher 就是用来渲染的\r\n    // vm._render 通过解析的render方法 渲染出虚拟dom  _c _v _s\r\n    // vm._update 通过虚拟dom  创建真实的dom\r\n    callHook(vm,'beforeMount');\r\n    // 渲染页面\r\n    let updateComponent = () => {//无论是渲染还是更像都会调用此方法\r\n        //返回的是虚拟dom\r\n\r\n        console.log('update');\r\n        \r\n        vm._update(vm._render());\r\n\r\n\r\n    }\r\n\r\n    // 渲染watcher 每个组件都有一个watcher\r\n    new Watcher(vm, updateComponent, () => { }, true)//true表示他是一个渲染watcher\r\n\r\n    callHook(vm,'mounted');\r\n}\r\n\r\n\r\nexport function callHook(vm,hook){\r\n    const handlers = vm.$options[hook];//[fn,fn,fn]\r\n    if(handlers){//找到对应的钩子依次执行\r\n        for(let i=0;i<handlers.length;i++){\r\n            handlers[i].call(vm);\r\n        }\r\n    }\r\n}\r\n","import { initState } from './state'\r\n\r\nimport { compileToFunction } from './compiler/index.js'\r\nimport { mountComponent,callHook } from './lifecycle'\r\n\r\nimport { mergeOptions } from './util/index'\r\n\r\nimport {nextTick} from './util/next-tick'\r\n\r\n// 在原型上添加一个init方法\r\nexport function initMixin(Vue) {\r\n    Vue.prototype._init = function (options) {\r\n        //    数据的劫持\r\n        const vm = this;//vue中使用this.$options 指代\r\n\r\n        // vm.$options = options;\r\n        // 下面这个是合并多个方法才开始写成这样的\r\n        // 将用户传递的  和  全局的进行一个合并\r\n        vm.$options = mergeOptions(vm.constructor.options,options);\r\n        callHook(vm,'beforeCreate');\r\n        // 初始化状态\r\n        initState(vm);//分割代码（这里面有1.数据劫持）\r\n\r\n        callHook(vm,'created')\r\n\r\n\r\n\r\n        // 2.模板编译\r\n        // 如果用户传入了el属性  需要将页面渲染出出来\r\n        // 如果用户传入了el  就要实现挂载流程\r\n        if (vm.$options.el) {\r\n            vm.$mount(vm.$options.el);\r\n        }\r\n\r\n    }\r\n    Vue.prototype.$mount = function (el) {\r\n        const vm = this;\r\n\r\n\r\n        const options = vm.$options;\r\n        el = document.querySelector(el);\r\n\r\n        // 默认先会查找有没有render方法，没有render  会 采用template， template也没有就用el中的内容\r\n        if (!options.render) {\r\n            // 对模板进行编译\r\n            let template = options.template;//取出模板\r\n            if (!template && el) {\r\n                template = el.outerHTML;\r\n            }\r\n            // console.log(template);\r\n            /*这是拿到的template的模板\r\n            <div id=\"app\">\r\n                <p>{{name}}</p>\r\n                <span>{{age}}</span>\r\n            </div>*/\r\n\r\n            // 我们需要将template  转换成render方法\r\n            // vue1.0是用的纯字符串编译，正则转换的方式，性能不高；vue2.0引用的是虚拟dom\r\n            /* 将上面的拿到的template模板，用render函数写成：\r\n            render(){  //_c是creatElement创建一个元素div； 有一些属性{id:'app'}： \r\n            有俩个儿子  p没有属性undefined; p里面有文本，创建一个文本_v;  _s表示的是json.stringify取值，转成一个对象格式或字符串格式，创建出来一个文本;  span同理\r\n            这样就创建出一个虚拟节点，变成上面的html\r\n                return _c('div',{id:'app'},_c('p',undefined,_v(_s(name))),_c('span',undefined,_v(_s(age))))\r\n            }\r\n            */\r\n            // 模板进行编译用compileToFunction这个函数(自己封装的)，也就是把template这个html编译成一个函数\r\n            const render = compileToFunction(template);\r\n            options.render = render;//这个是为了用户传了render用用户传的，用户没传，就用自己写的\r\n        }\r\n\r\n        // options.render\r\n        // console.log(options.render, vm)\r\n\r\n        // 3.挂载组件：渲染当前的组件或者叫挂载这个组件\r\n        mountComponent(vm, el);\r\n\r\n\r\n    }\r\n    //用户调用nextTick\r\n    Vue.prototype.$nextTick = nextTick\r\n}\r\n\r\n","export function createElement(tag,data={},...children){\r\n  let  key=data.key;\r\n  if(key){\r\n      delete data.key;\r\n  }\r\n  return vnode(tag,data,key,children,undefined)\r\n\r\n}\r\n\r\n\r\nexport function createTextNode(text){\r\n   return vnode(undefined,undefined,undefined,undefined,text)\r\n}\r\n\r\nfunction vnode(tag,data,key,children,text){\r\n    return{\r\n        tag,\r\n        data,\r\n        key,\r\n        children,\r\n        text\r\n    }\r\n\r\n}\r\n// 虚拟节点  就是通过_c _v _s 实现用对象来描述dom操作  （对象）\r\n// 1)将template转换成ast语法树 -> 生成render方法  ->  生成虚拟dom  ->  真实的dom\r\n// 重新生成虚拟dom  -> 更新dom\r\n\r\n/**这是虚拟dom\r\n * \r\n * {\r\n * tag:'div'\r\n * key:undefined,\r\n * data:{},\r\n * children:[\r\n * \r\n * ],\r\n * text:undefined\r\n * }\r\n * \r\n * \r\n * \r\n */\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {createElement,createTextNode} from './vdom/create-element'\r\nexport function renderMixin(Vue) {\r\n    // _c是创建元素的虚拟节点\r\n    // _v创建文本的虚拟节点\r\n    // _s JSON.stringify\r\n    Vue.prototype._c = function () {\r\n        return createElement(...arguments);//tag,data,children1,childern2\r\n    }\r\n    Vue.prototype._v = function (text) {\r\n        return createTextNode(text);//tag,data,children1,childern2\r\n    }\r\n    Vue.prototype._s = function (val) {\r\n        return val=null?'':(typeof val === 'object'?JSON.stringify(val):val);\r\n    }\r\n\r\n    Vue.prototype._render = function (params) {\r\n        const vm = this;\r\n        const { render } = vm.$options;\r\n        let vnode=render.call(vm);//去实例上  取值\r\n        return vnode;\r\n    }\r\n}","export default function initMixin(Vue) {\r\n    Vue.mixin = function (mixin) {\r\n        // 如何实现俩个对象的合并\r\n        this.options = mergeOptions(this.options, mixin)\r\n    }\r\n \r\n    // 生命周期的合并策略  [beforeCreate,beforeCreate]\r\n    // Vue.mixin({\r\n    //     a: 1,\r\n    //     beforeCreate() {\r\n    //         console.log('mixin 1')\r\n    //     }\r\n    // })\r\n    // Vue.mixin({\r\n    //     b: 2,\r\n    //     beforeCreate() {\r\n    //         console.log('mixin 2')\r\n    //     }\r\n    // })\r\n    // console.log(Vue.options)\r\n\r\n}\r\n\r\n\r\n","\r\nexport const ASSETS_TYPE=[\r\n    'component',\r\n    'directive',\r\n    'filter'\r\n]","import { ASSETS_TYPE } from './const';\r\nexport default function initAssetRegisters(Vue) {\r\n    ASSETS_TYPE.forEach(type => {\r\n        Vue[type] = function (id, definition) {\r\n            if (type === 'component') {\r\n                //注册全局组件\r\n                //使用extend 方法 将对象变成构造函数\r\n            } else if (type === 'filter') {\r\n\r\n            } else if (type === 'directive') {\r\n\r\n            }\r\n            this.options[type + 's'][id] = definition\r\n\r\n        }\r\n    });\r\n}","import { mergeOptions } from '../util/index'\r\nimport initMixin from './mixin';\r\nimport initAssetRegisters from './assets';\r\n\r\nimport {ASSETS_TYPE} from './const';\r\n\r\nconsole.log(ASSETS_TYPE);\r\n\r\nexport function initGlobalAPI(Vue) {\r\n    //整合了所有的全局相关的内容\r\n    Vue.options = {}\r\n    initMixin(Vue)\r\n\r\n    // 初始化的全局过滤器 指令 组件\r\n    ASSETS_TYPE.forEach(type=>{\r\n        Vue.options[type+'s'] ={};//\r\n    })\r\n\r\n    Vue.options._base = Vue;//_base 是Vue的构造函数\r\n    initAssetRegisters(Vue)\r\n\r\n}\r\n\r\n\r\n","// 自写vue的核心代码,只是vue的一个声明\r\nimport {initMixin} from './init';\r\nimport {renderMixin} from './render';\r\nimport {lifecycleMixin} from './lifecycle';\r\n\r\nimport {initGlobalAPI} from './initGlobalAPI/index'\r\n\r\nfunction Vue(options){\r\n    //进行vue的初始化操作\r\n    this._init(options);\r\n\r\n}\r\n// 通过引入文件的方式 给vue原型上添加方法\r\ninitMixin(Vue)  //给vue原型上添加一个_init方法\r\nrenderMixin(Vue);\r\nlifecycleMixin(Vue);\r\n\r\n\r\n\r\n\r\n// 初始化全局的api\r\ninitGlobalAPI(Vue)\r\nexport default Vue"],"names":["isObject","data","def","key","value","Object","defineProperty","enumerable","configurable","proxy","vm","source","get","set","newValue","LIFECYCLE_HOOKS","strats","mergeHook","parentVal","childVal","concat","forEach","hook","mergeOptions","parent","child","options","mergeField","hasOwnProperty","oldArrayMethods","Array","prototype","arrayMethods","create","methods","method","args","result","apply","inserted","ob","__ob__","slice","observerArray","dep","notify","id","Dep","subs","watcher","push","target","addDep","update","stack","pushTarget","popTarget","pop","length","Observer","isArray","__proto__","walk","i","observe","keys","defineReactive","childOb","console","log","depend","dependArray","current","isObj","initState","opts","$options","props","initData","computed","watch","_data","call","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","parseHTML","html","root","currentParent","ELEMENT_TYPE","TEXT_TYPE","createASTElement","tagName","attrs","tag","type","children","start","element","chars","text","replace","end","textEnd","indexOf","startTagMatch","parseSartTag","endTagMatch","match","advance","substring","n","attr","name","defaultTagRE","genProps","str","obj","split","item","JSON","stringify","genChildren","el","map","c","gen","join","node","generate","tokens","index","lastIndex","exec","trim","code","compileToFunction","template","renderFn","Function","callbacks","waiting","flushCallback","cb","nextTick","setTimeout","queue","has","flusSchedularQueue","run","queueWatcher","Watcher","exprOrFn","callback","getter","depsId","Set","deps","add","addSub","patch","oldVnode","vnode","isRealElement","nodeType","oldElm","parentElm","parentNode","createElm","insertBefore","nextSibling","removeChild","document","createElement","updateProperties","appendChild","createTextNode","newProps","styleName","style","className","setAttribute","lifecycleMixin","Vue","_update","$el","mountComponent","callHook","updateComponent","_render","handlers","initMixin","_init","constructor","$mount","querySelector","render","outerHTML","$nextTick","undefined","renderMixin","_c","arguments","_v","_s","val","params","mixin","ASSETS_TYPE","initAssetRegisters","definition","initGlobalAPI","_base"],"mappings":"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"}